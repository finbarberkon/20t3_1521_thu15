$0  = $zero # Like NULL, used to read 0 or to dump things you don't need
$1  = $at   # Assembler temporary (used by the assember) DO NOT USE
$2  = $v0   # Return register
$3  = $v1   # Return register (for second return value, or larger return value)
$4  = $a0   # Argument register
$5  = $a1   # Argument register
$6  = $a2   # Argument register
$7  = $a3   # Argument register (larger than 32 bit or > 4 args go on stack)
$8  = $t0   # Temporary register (may change between function calls)
$9  = $t1   # Temporary register (as above)
$10 = $t2   # Temporary register (as above)
$11 = $t3   # Temporary register (as above)
$12 = $t4   # Temporary register (as above)
$13 = $t5   # Temporary register (as above)
$14 = $t6   # Temporary register (as above)
$15 = $t7   # Temporary register (as above)
$16 = $s0   # Save register (must be kept persistent across function calls)
$17 = $s1   # Save register (as above)
$18 = $s2   # Save register (as above)
$19 = $s3   # Save register (as above)
$20 = $s4   # Save register (as above)
$21 = $s5   # Save register (as above)
$22 = $s6   # Save register (as above)
$23 = $s7   # Save register (as above)
$24 = $t8   # Temporary register (may change between function calls)
$25 = $t9   # Temporary register (as above)
$26 = $k0   # Kernel register (used by the operating system) DO NOT USE
$27 = $k1   # Kernel register (used by the operating system) DO NOT USE
$28 = $gp   # -- Global pointer (out of scope of course)
$29 = $sp   # Stack pointer register (address of the top of the current stack)
$30 = $fp   # -- Frame pointer (out of scope of course)
$31 = $ra   # Return address register (holds return of last function call)
